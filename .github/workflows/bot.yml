name: Auto Tweet Bot

on:
  schedule:
    - cron: "*/20 * * * *"  # Runs every 20 minutes
  workflow_dispatch: # Allows manual runs

jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out repository
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Ensure dependencies are up-to-date

      # Step 4: Validate Twitter API Authentication
      - name: Validate Twitter API Authentication
        run: |
          echo "Testing Twitter API Authentication..."
          python -c "import tweepy; client = tweepy.Client(consumer_key='${{ secrets.API_KEY }}', consumer_secret='${{ secrets.API_SECRET }}', access_token='${{ secrets.ACCESS_TOKEN }}', access_token_secret='${{ secrets.ACCESS_SECRET }}'); print('DEBUG: Successfully authenticated with Twitter API.')"

      # Step 5: Run the bot script
      - name: Run bot
        run: |
          echo "Debugging Environment Variables..."
          echo "API_KEY: ${{ secrets.API_KEY }}"
          echo "API_SECRET: ${{ secrets.API_SECRET }}"
          echo "ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}"
          echo "ACCESS_SECRET: ${{ secrets.ACCESS_SECRET }}"
          echo "BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}"
          echo "OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}"
          python autotweet.py || echo "Bot encountered an issue, check logs"


      # Step 6: Log workflow execution
      - name: Log workflow execution
        run: |
          echo "Bot workflow executed successfully at $(date)"

      # Step 7: Log bot output (optional debugging)
      - name: Log bot output
        run: cat autotweet.log || echo "No log file found"
