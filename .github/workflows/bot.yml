name: Auto Tweet Bot

on:
  schedule:
    - cron: "*/20 * * * *"  # Runs every 20 minutes
  workflow_dispatch: # Allows manual runs

jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out repository
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Debug Environment Variables
      - name: Debug Environment Variables
        run: |
          if [ -z "${{ secrets.API_KEY }}" ]; then echo "ERROR: API_KEY is missing"; exit 1; fi
          if [ -z "${{ secrets.API_SECRET }}" ]; then echo "ERROR: API_SECRET is missing"; exit 1; fi
          if [ -z "${{ secrets.ACCESS_TOKEN }}" ]; then echo "ERROR: ACCESS_TOKEN is missing"; exit 1; fi
          if [ -z "${{ secrets.ACCESS_SECRET }}" ]; then echo "ERROR: ACCESS_SECRET is missing"; exit 1; fi
          if [ -z "${{ secrets.OPENAI_API_KEY }}" ]; then echo "ERROR: OPENAI_API_KEY is missing"; exit 1; fi
          echo "All required secrets are present."

      # Step 5: Check Twitter API Authentication
      - name: Validate Twitter API Authentication
        run: |
          python - <<EOF
import tweepy
try:
    client = tweepy.Client(
        consumer_key="${{ secrets.API_KEY }}",
        consumer_secret="${{ secrets.API_SECRET }}",
        access_token="${{ secrets.ACCESS_TOKEN }}",
        access_token_secret="${{ secrets.ACCESS_SECRET }}"
    )
    print("DEBUG: Successfully authenticated with Twitter API.")
except Exception as e:
    print(f"ERROR: Failed to authenticate with Twitter API: {e}")
    exit(1)
EOF

      # Step 6: Run the bot script
      - name: Run bot
        run: |
          python bot.py
        env:
          API_KEY: ${{ secrets.API_KEY }}
          API_SECRET: ${{ secrets.API_SECRET }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          ACCESS_SECRET: ${{ secrets.ACCESS_SECRET }}
          BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      # Step 7: Verify Workflow Execution
      - name: Log workflow execution
        run: |
          echo "Bot workflow executed successfully at $(date)"
