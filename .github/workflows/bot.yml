name: Auto Tweet Bot

# In .github/workflows/bot.yml, modify the cron schedule
on:
  schedule:
    - cron: "0 */1 * * *"  # Run every 1 hour instead of every 30 minutes
  workflow_dispatch:

jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out repository
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 3.5: List installed Python packages
      - name: List installed packages
        run: pip list

      # Step 4: Validate secrets
      - name: Validate Environment Variables
        run: |
          echo "Validating secrets..."
          for var in API_KEY API_SECRET ACCESS_TOKEN ACCESS_SECRET BEARER_TOKEN OPENAI_API_KEY; do
            if [ -z "${!var}" ]; then
              echo "ERROR: $var is not set!"
              exit 1
            else
              echo "$var: exists"
            fi
          done
        env:
          API_KEY: ${{ secrets.API_KEY }}
          API_SECRET: ${{ secrets.API_SECRET }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          ACCESS_SECRET: ${{ secrets.ACCESS_SECRET }}
          BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      # Step 5: Run the bot script
      - name: Run bot
        run: |
          echo "Starting autotweet bot..."
          python autotweet.py || echo "Bot script execution failed."
        env:
          API_KEY: ${{ secrets.API_KEY }}
          API_SECRET: ${{ secrets.API_SECRET }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          ACCESS_SECRET: ${{ secrets.ACCESS_SECRET }}
          BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      # Step 6: Display bot logs
      - name: Display bot logs
        if: always()
        run: |
          if [ -f autotweet.log ]; then
            echo "Showing log output:"
            cat autotweet.log
          else
            echo "No log file found."
          fi
